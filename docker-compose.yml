version: '3.8'

services:
  mysql:
    image: mysql:8.4.5
    container_name: pooroom-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      TZ: Asia/Seoul
    ports:
      - "${DB_PORT}:3306"
      - "33061:33060"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
      - ./docker/mysql/conf/my.cnf:/etc/mysql/conf.d/custom.cnf
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    networks:
      - pooroom-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s

  redis:
    image: redis:7-alpine
    container_name: pooroom-redis
    restart: unless-stopped
    environment:
      TZ: Asia/Seoul
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - pooroom-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5
      start_period: 10s
      interval: 30s

  adminer:
    image: adminer:4.8.1
    container_name: pooroom-adminer
    restart: unless-stopped
    ports:
      - "9080:8080"
    networks:
      - pooroom-network
    depends_on:
      mysql:
        condition: service_healthy

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  pooroom-network:
    driver: bridge